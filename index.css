:root {
    --background-color: rgb(26, 28, 32);
    --text-color: rgb(236, 239, 242);
    --secondary-color: rgb(140, 144, 161);
    --cell-color: rgb(140, 144, 161);
    
    /* Unused */
    --delimiter-color: rgb(46, 48, 57);
    --link-color: rgb(115, 122, 222);
}

* {
    box-sizing: border-box;
}

body {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    margin: 0;
    background-color: var(--background-color);
    color: var(--text-color);
    font-size: 1.25rem;
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    padding: 2vh 2vw;
}

main {
    display: flex;
    flex-direction: column;
    align-items: center;
}

#grid {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    width: fit-content;
    
    /* because in each cell is shown its position,
    if, while drawing the walls, text is selected, it's noisy. */
    -webkit-user-select: none;
    user-select: none;

    border: 1px solid var(--secondary-color);
    /* I thought about setting .row:nth-last-of-type, but because the rows are inserted via js
    after the css is loaded, it has not effect. */
    border-bottom: 2px solid var(--secondary-color);
}

.row {
    display: flex;
    border-top: 1px solid var(--secondary-color);
    border-left: 1px solid var(--secondary-color);
}

.cell {
    height: 4vh;
    aspect-ratio: 1;
    font-size: .75rem;
    color: var(--cell-color);
    border-right: 1px solid var(--secondary-color);
}


/*
 *
 * Buttons & Colors
 */

#btns-container {
    background-color: var(--text-color);
    padding: .5rem 1.5rem;
    border-radius: 7px;
    margin-top: 1rem;
}

#btns-container .separator {
    color: var(--background-color);
}

#btns-container button {
    border-radius: 7px;
    padding: .25em .5em;
    /* I set the margin on each individual button instead of setting it to the container,
    because when the screen shrinks and they move on a new line, they mantein the distance form the row above. */
    margin-block: .5rem;
}

.wall {
    background-color: rgb(97, 40, 40);
    color: rgb(215, 215, 215); /* I do not want a color
    that has a super high contrast with the background,
    because it's distractive. I think a smoked white is
    the right color. */
}

.target {
    background-color: rgb(192, 48, 48);
    color: rgb(215, 215, 215);
}

.root {
    background-color: rgb(0, 140, 255);
    color: rgb(215, 215, 215);
}

.visited {
    background-color: rgb(160, 200, 245);
}

.wall-hover {
    /* I place the border inside to avoid moving the grid */
    box-shadow: inset 0px 0px 0px 3px rgb(182, 45, 45);
}

.target-hover {
    box-shadow: inset 0px 0px 0px 3px rgb(240, 65, 185);
}

.root-hover {
    box-shadow: inset 0px 0px 0px 3px rgb(60, 226, 238);
}

#clear-btn {
    background-color: var(--text-color);
    color: var(--background-color);
}

#rubber-btn {
    background-color: rgb(140, 144, 161);
    color: var(--background-color);
}

#draw-walls-btn {
    background-color: rgb(97, 40, 40);
    color: var(--text-color);
}

#select-targets-btn {
    background-color: rgb(192, 48, 48);
    color: var(--text-color);
}

#select-root-btn {
    background-color: rgb(0, 140, 255);
    color: var(--text-color);
}

#run-btn {
    background-color: green;
    color: var(--text-color);
}

#stop-btn {
    background-color: rgb(160, 200, 245);
}

.target-found {
    animation: pulse 1s ease-in-out 1;
}

@keyframes pulse {
    0% {
      transform: scale(1);
    }
    50% {
      transform: scale(1.5);
    }
    100% {
      transform: scale(1);
    }
}

.rubber-hover {
    opacity: .5;
}


/*
 *
 * Miscellaneous
 */

button {
    cursor: pointer;
}

button:disabled {
    opacity: .7;
}

button, input {
    font: inherit;
}

input {
    border-radius: 7px;
    padding: .25em .5em;
}

#controls .result {
    font-weight: bold;
}

#algos-fieldset {
    border-radius: 7px;
}

#step-pause {
    max-width: 12ch;
    background-color: var(--background-color);
    color: var(--text-color);
}

#err-msg {
    color: rgb(150, 19, 19);
    font-weight: bold;
}

@media (min-width: 1150px) {
    body {
        flex-direction: row;
        align-items: start;
        gap: 1rem;
    }
}

button:focus {
    border: 3px solid red;
}

