:root {
    --background-color: rgb(26, 28, 32);
    --text-color: hsl(210, 19%, 94%);
    --secondary-color: rgb(140, 144, 161);
    --cell-color: rgb(140, 144, 161);
    
    --wall-color: 231, 3%, 49%;
    --target-color: 0, 60%, 47%;
    --root-color: 195, 100%, 44%;

    --min-cell-size: 25px;
    --max-cell-size: 50px;
    --max-cells-per-row: 20;
    --max-num-of-rows: 20;

    --cell-size: round(down,
        clamp(var(--min-cell-size), calc(95vw / var(--max-cells-per-row)), var(--max-cell-size)), 
        5px);
    
    --row-width: round(down, 
        min(95vw, calc(var(--max-cells-per-row) * var(--cell-size))), 
        var(--cell-size));
    
    --grid-height: round(down, 
        min(90vh, calc(var(--max-num-of-rows) * var(--cell-size))), 
        var(--cell-size));
}

* {
    box-sizing: border-box;
}

body {
    background-color: var(--background-color);
    color: var(--text-color);
    font-size: 1.25rem;
    font-family: sans-serif;
}

body > * {
    margin-inline: auto;
    width: fit-content;
}

#grid {
    display: flex;
    flex-direction: column;
    height: var(--grid-height);
    overflow-y: hidden;
}

.row {
    display: flex;
    width: var(--row-width);
    height: var(--cell-size);
    min-height: var(--cell-size);
    overflow-x: hidden;
}

.cell {
    width: var(--clod-size);
    min-width: var(--clod-size);
    aspect-ratio: 1;
    color: var(--cell-color);
    /* box-shadow: inset 0 0 1px grey; */
    font-size: 0;
}

.row:nth-child(even) .cell:nth-child(even),
.row:nth-child(odd) .cell:nth-child(odd) {
    background-color: rgba(0, 0, 255, 0.112);
}

.row:nth-child(even) .cell:nth-child(odd),
.row:nth-child(odd) .cell:nth-child(even) {
    background-color: rgba(128, 128, 128, 0.335);
}

.wall {
    background-color: hsl(var(--wall-color));
}

.target {
    background-color: hsl(var(--target-color));
}

.root {
    background-color: hsl(var(--root-color));
}

.visited {
    background-color: rgb(160, 200, 245);
}

.wall-hover {
    /* I use a box-shadow instead of the border to avoid moving the grid. */
    box-shadow: inset 0px 0px 0px 3px hsla(var(--wall-color), .8);
}

.target-hover {
    box-shadow: inset 0px 0px 0px 3px hsla(var(--target-color), .8);
}

.root-hover {
    box-shadow: inset 0px 0px 0px 3px hsla(var(--root-color), .8);
}

.target-found {
    animation: pulse 1s ease-in-out 1;
}

@keyframes pulse {
    0% {
      transform: scale(1);
    }
    50% {
      transform: scale(1.5);
    }
    100% {
      transform: scale(1);
    }
}

.rubber-hover {
    opacity: .5;
}


/*
 *
 * Buttons
 */

#btns-container {
    margin-top: .5em;
    padding: .5rem 1.5rem;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 1.1rem;
    gap: .25em;
    flex-wrap: wrap;
    border-radius: 8px;
    background-color: rgba(0, 0, 255, 0.112);   
}

@media (min-width: 500px) {
    #btns-container {
        font-size: 1.2rem;
    }
}

.controls-btn {
    padding: .25em .5em;
    border-radius: 8px;
    border: 2px solid #ababab;
    transition: all 0.035s ease;
    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
    
    /* I set the margin on each individual button instead of setting it to the container,
    because when the screen shrinks and they move on a new line, they mantein the distance from the row above. */
    margin-block: .5rem;
    
    --bkg-color: 0, 0%, 50%;
    color: var(--text-color);
    background-color: hsl(var(--bkg-color));
}

.controls-btn:not(:disabled):hover {
    border-color: #999;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.08);
}

.controls-btn:not(:disabled):active {
    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
    transform: translateY(1px);
}

.controls-btn:focus {
    border-color: darkred;

    /* For some reason, this hasn't the effect I expect. */
    /* border-color: hsla(var(--bkg-color), .2); */
}

.separator {
    background-color: rgb(66, 66, 66);
    width: 5px;
    display: inline-block;
    aspect-ratio: 1;
    border-radius: 100%;
    margin-inline: .25em;
}

#clear-btn {
    --bkg-color: 210, 19%, 94%;
    color: var(--background-color);
}

#rubber-btn {
    --bkg-color: 229, 62%, 35%;
}

#draw-walls-btn {
    --bkg-color: var(--wall-color);
}

#select-targets-btn {
    --bkg-color: var(--target-color);
}

#select-root-btn {
    --bkg-color: var(--root-color);
}

#run-btn {
    --bkg-color: 120, 100%, 25%;
}

#stop-btn {
    background-color: rgb(163, 11, 11);
}


/*
  Controls */

form {
}

#step-pause {
    background-color: var(--background-color);
    color: var(--text-color);
    margin-top: .5em;
}

#err-msg {
    color: rgb(150, 19, 19);
    font-weight: bold;
}

.result {
    font-weight: bold;
}

/*
 *
 * Miscellaneous
 */

button {
    cursor: pointer;
}

button:disabled {
    opacity: .5;
}

button, input {
    font: inherit;
}

input, fieldset {
    border-radius: 8px;
    padding: .25em .5em;
}




